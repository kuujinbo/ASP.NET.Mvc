<div class='row'>
    <div class='col-xs-6'>
        <fieldset>
            <legend>Angular Plupoad Directive</legend>
            <plupload-wrapper
                upload-url='@Url.Action("Index", "Home")'
                delete-url='@Url.Action("Delete", "Home")'
                chunk-size='1mb'
            ></plupload-wrapper>
        </fieldset>
    </div>
    <div class='col-xs-6'>
<fieldset>
    <legend>Web API Chunked File Download</legend>
    <a href='/api/WebApiChunkedDownload' class='btn btn-primary'>Send GET</a>
</fieldset>
    </div>
</div>

<div class='row'>
    <div class='col-xs-6'>
    @using (Html.BeginForm("Post", "Home"))
    {
        @Html.AntiForgeryToken()
        <fieldset>
            <legend>Html.BeginForm("Post", "Home")</legend>
            <input class='btn btn-primary' type="submit" value="Submit" />
            @if (TempData["result"] != null)
            { <p>@Html.Raw(@TempData["result"])</p>;
            }
        </fieldset>
    }
    </div>
    <div class='col-xs-6'>
    @using (Html.BeginForm("PostIgnoreXsrfFilter", "Home"))
    {
        <fieldset>
            <legend>Html.BeginForm("PostIgnoreXsrfFilter", "Home")</legend>
            <input class='btn btn-primary' type='submit' value='Submit' />
            @if (TempData["resultPostIgnoreXsrfFilter"] != null)
            { <p>@Html.Raw(@TempData["resultPostIgnoreXsrfFilter"])</p>;
            }
        </fieldset>
    }
    </div>
</div>
<div class='row'>
    <div class='col-xs-6'>
        @using (Html.BeginForm("JsonAntiForgery", "Home"))
        {
            @Html.AntiForgeryToken()
            <fieldset>
                <legend>ValidateJsonAntiForgeryTokenAttribute</legend>
                <input id='json-antiforgery-token' class='btn btn-primary' type='submit' value='Submit' />

            </fieldset>

        }
    </div>
    <div class='col-xs-6'>
        <fieldset>
            <legend>CAC</legend>
            <a href='https://localhost:44343/CacInfo'>Get CAC Information</a>
        </fieldset>
    </div>
</div>


<fieldset>
    <legend>Angular $http Interceptor</legend>
<div ng-controller="HttpRequestInterceptorTestController">
    <form class="form-inline">
        <div class='form-group'>
            <select ng-model="method" aria-label="Request method">
                <option>GET</option>
                <option>POST</option>
                <option>DELETE</option>
                <option>PUT</option>
            </select>
        </div>
        <button id="fetch-btn" type='submit' class='btn btn-primary' ng-click="fetch()">Submit</button>
    </form>
    <p>
        <pre>Status code: {{status}}</pre>
        <pre>Response data: {{data}}</pre>
    </p>
</div>
</fieldset>


<script type='text/javascript'>
    function Xhr() {
        // MS @Html.AntiForgeryToken() **IGNORES** HTML4 naming standards:
        // https://www.w3.org/TR/html4/types.html#type-id ('name' token)
        this._xsrf = '__RequestVerificationToken';
    }

    Xhr.prototype = {
        constructor: Xhr,

        getXsrfToken: function (element) {
            var token =  element.form.querySelector('input[name=' + this._xsrf + ']');
            if (token !== null) {
                var xsrf = {};
                xsrf[this._xsrf] = token.value;
                return xsrf;
            }
            return null;
        },
        sendXhr: function (element, url, requestData, requestType) {
            var self = this;
            $.ajax({
                url: url,
                headers: self.getXsrfToken(element),
                data: requestData, // bulk action button => record Id array
                type: requestType || 'POST'
            })
            .done(function (data, textStatus, jqXHR) {
                alert(data);
            })
            .fail(function (jqXHR, textStatus, errorThrown) {
                alert(
                    jqXHR.responseJSON
                    || (jqXHR.status !== 500 ? jqXHR.statusText : 'Error!')
                );
            });
        }
    }

    var xhr = new Xhr();
    var jsonAntiForgeryButton = document.querySelector('#json-antiforgery-token');

    if (jsonAntiForgeryButton != null) {
        jsonAntiForgeryButton.addEventListener(
            'click',
            function (e) {
                xhr.getXsrfToken(e.target);
                xhr.sendXhr(e.target, '/Home/JsonAntiForgery', {Id: 1, Name: 'TEST NAME'})
                e.preventDefault();
            }
        );
    }
</script>



@section scripts
{
@Scripts.Render("~/bundles/plupload")
}